---
import Main from "../layouts/main.astro";
// import CollegeSelect from '../components/get_started/college_selection/collegeSelect.svelte'
import CollegeSelect from "../components/get_started/1_college_selection/collegeSelect.astro";
import CourseSelect from "../components/get_started/2_course_selection/courseSelect.astro";
import colleges from "../data/collegelist.json";
---

<Main title="Get Started">
    <div
        class="dark:text-white dark:bg-[#181818] flex flex-col min-h-screen h-screen max-h-max"
    >
        <!-- Header -->
        <div class="w-full flex justify-center items-center pt-12">
            <div class="w-11/12 2xl:w-4/6 flex items-center gap-4">
                <svg
                    class="w-5 dark:fill-white fill-black active:scale-90 transition-all duration-150"
                    id="back_button"
                    width="1.25rem"
                    height="1.25rem"
                    xmlns="http://www.w3.org/2000/svg"
                    data-v-91817bbc=""
                    width="16"
                    height="16"
                    viewBox="0 0 16 16"
                    ><path
                        data-v-91817bbc=""
                        clip-rule="evenodd"
                        d="M3 7.95711L10.9571 15.9142L12.3713 14.5L5.82843 7.95711L12.3713 1.41421L10.9571 0L3 7.95711Z"
                    ></path></svg
                >
                <!-- progrress-bar -->
                <div
                    class="bg-gray-200 dark:bg-neutral-700 w-full h-1 flex rounded-lg"
                    id="progress-container"
                >
                    <!-- progrress-bar-completed -->
                    <span
                        class="transition-all duration-1000 ease-[cubic-bezier(.4,.7,0,1)] bg-green-600 dark:bg-green-500"
                        id="progress-completed"
                        style="width:0px"></span>
                </div>

                <svg
                    id="next_button"
                    class="w-5 dark:fill-white fill-black rotate-180 active:scale-90 transition-all duration-150 opacity-0"
                    width="1.25rem"
                    height="1.25rem"
                    xmlns="http://www.w3.org/2000/svg"
                    data-v-91817bbc=""
                    width="16"
                    height="16"
                    viewBox="0 0 16 16"
                    ><path
                        data-v-91817bbc=""
                        clip-rule="evenodd"
                        d="M3 7.95711L10.9571 15.9142L12.3713 14.5L5.82843 7.95711L12.3713 1.41421L10.9571 0L3 7.95711Z"
                    ></path></svg
                >
            </div>
        </div>
        <div class="h-full max-h-max overflow-x-hidden relative">
            <!-- Mover Element -->
            <div
                class="flex h-full relative transition-all ease-[cubic-bezier(.4,.7,0,1)] duration-1000 left-0"
                id="mover-element"
            >
                <CollegeSelect colleges={colleges} />
                <CourseSelect />
            </div>
        </div>
    </div>
</Main>

<script>
    let progBar: HTMLSpanElement | null = document.querySelector(
        "#progress-completed"
    );
    let progCon: HTMLDivElement | null = document.querySelector(
        "#progress-container"
    );
    let moverElem: HTMLDivElement | null =
        document.querySelector("#mover-element");
    let nextButton: SVGElement | null = document.querySelector("#next_button");

    let backButton: SVGElement | null = document.querySelector("#back_button");

    if (moverElem && progCon && progBar) {
        moverElem.style.width = moverElem.children.length * 100 + "%";
    }
    let spwnedBtns: NodeListOf<HTMLButtonElement> | null =
        document.querySelectorAll('[aria-label="trig_button"]');
    nextButton?.addEventListener("mousedown", (event) => {
        event.preventDefault();
        if (!nextButton || !moverElem || !progBar || !progCon) return;
        if (progBar.offsetWidth == progCon.offsetWidth) return;
        moverElem.style.left =
            parseInt(moverElem.style.left ? moverElem.style.left : "0") -
            100 +
            "%";
        progBar.style.width =
            progBar.offsetWidth +
            progCon.offsetWidth / moverElem.children.length +
            "px";
    });

    backButton?.addEventListener("mousedown", (event) => {
        event.preventDefault();
        if (!moverElem || !progBar || !progCon) return;
        if (progBar.offsetWidth == 0) return;
        moverElem.style.left =
            parseInt(moverElem.style.left ? moverElem.style.left : "0") +
            100 +
            "%";
        progBar.style.width =
            progBar.offsetWidth -
            progCon.offsetWidth / moverElem.children.length +
            "px";
    });

    spwnedBtns.forEach((btn) => {
        if (!nextButton) return;
        nextButton.style.opacity = "1";
    });
</script>
