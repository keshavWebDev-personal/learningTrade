---
import InputForm from "../inputForm.layout.astro";
import ClgSrchInput from "./clg_srch_input.svelte";
import ClgBtnSpawner from "./clg_btn_spawner.svelte";

interface College {
    name: string;
    address: {
        local: string;
        city: string;
        district: string;
        state: string;
        country: string;
    };
}
function cptlFstL(string: string) {
    return string.charAt(0).toUpperCase() + string.slice(1);
}
---

<InputForm>
    <div class="flex flex-col w-11/12 2xl:w-4/6 h-full max-h-max">
        <label
            for=""
            class="font-[HelveticaWorld] text-3xl lg:text-5xl md:text-4xl sm:text-3xl mt-10"
            >Tell us about your College</label
        >
        <div class="w-full h-full max-h-max flex flex-col items-center mt-10">
            <ClgSrchInput client:load />

            <div
                class="pb-5 w-full h-full max-h-fit bg-gradient-to-tr from-[#FFF7AD] to-[#FFA9F9] dark:bg-gradient-to-r dark:from-[#28282646] dark:via-[#372d37c2] dark:to-[#525252c2] md:mt-4 sm:mt-14 mt-12 font-[poppins] dark:border-t dark:border-l dark:border-[#3d3d3d] relative rounded-t-3xl backdrop-blur-sm"
                id="background"
            >
                <div
                    class="absolute w-min h-min bottom-[99.99%] 2xl:left-[10%] xl:left-[12%] md:left-[8%] sm:left-[15%] left-12 after:content-[''] after:rounded-es-full after:h-[50%] after:aspect-[1.7/1] sm:after:aspect-[2/1] after:bg-none after:absolute after:left-[99.3%] after:bottom-0 after:dark:border-l after:dark:border-b after:dark:border-[#3d3d3d] 2xl:after:shadow-[-20px_0_0_0_#252225] xl:after:shadow-[-20px_0_0_0_#262226] md:after:shadow-[-20px_0_0_0_#242124] sm:after:shadow-[-20px_0_0_0_#292429] after:shadow-[-14px_0_0_0_#2D262D] after:z-10 before:content-[''] before:rounded-ee-full before:h-[50%] sm:before:aspect-[2/1] before:aspect-[1.7/1] before:bg-none before:absolute before:right-[99.2%] before:bottom-0 before:dark:border-r before:dark:border-b before:dark:border-[#3d3d3d] 2xl:before:shadow-[20px_0_0_0_#201F20] xl:before:shadow-[20px_0_0_0_#211F20] md:before:shadow-[20px_0_0_0_#201F20] sm:before:shadow-[20px_0_0_0_#201F1F] before:shadow-[14px_0_0_0_#232123] 232022 before:z-10"
                >
                    <div
                        class="relative overflow-hidden dark:border-x dark:border-t dark:border-[#3d3d3d] lg:rounded-t-3xl rounded-t-2xl lg:py-0 py-1"
                    >
                        <button
                            class="bg-transparent flex items-center lg:gap-3 lg:text-lg lg:px-10 lg:py-2 sm:text-sm sm:px-6 sm:py-1 sm:gap-2 px-6 py-1 gap-2 select-none text-xs"
                        >
                            <svg
                                class="dark:fill-white fill-black lg:w-4 w-3 mr-2 z-50"
                                version="1.1"
                                id="Capa_1"
                                xmlns="http://www.w3.org/2000/svg"
                                xmlns:xlink="http://www.w3.org/1999/xlink"
                                viewBox="0 0 490 490"
                                xml:space="preserve"
                            >
                                <polygon
                                    points="456.851,0 245,212.564 33.149,0 0.708,32.337 212.669,245.004 0.708,457.678 33.149,490 245,277.443 456.851,490 489.292,457.678 277.331,245.004 489.292,32.337 "
                                ></polygon>
                            </svg>

                            <p class="z-10">Clear</p>
                        </button>
                        <div
                            id="ButtonBG"
                            class="absolute top-0 w-full h-full left-[-70%] bg-gradient-to-tr from-[#FFF7AD] to-[#FFA9F9] dark:bg-gradient-to-r dark:from-[#1C1C1C] dark:via-[#2E272E] dark:to-[#444444] z-0"
                        >
                        </div>
                    </div>
                </div>
                <div id="btnSpwn_div">
                    <ClgBtnSpawner client:load />
                </div>
            </div>
        </div>
    </div>
</InputForm>
<script>
    let background = document.getElementById("background");
    let ButtonBG = document.getElementById("ButtonBG");
    if (ButtonBG && background?.offsetWidth) {
        ButtonBG.style.width = background?.offsetWidth + "px";
    }
    window.addEventListener("resize", (event) => {
        let background = document.getElementById("background");
        let ButtonBG = document.getElementById("ButtonBG");
        if (ButtonBG && background?.offsetWidth) {
            ButtonBG.style.width = background?.offsetWidth + "px";
        }
    });
    let btnSpwner: HTMLDivElement | null =
        document.querySelector("#btnSpwn_div");
    let nextButton: HTMLDivElement | null =
        document.querySelector("#next_button");

    btnSpwner?.addEventListener("click", () => {
        if (!nextButton) return;
        nextButton.style.opacity = "1";
    });
    nextButton?.addEventListener("mousedown", (event) => {
        event.preventDefault();
        if (!nextButton) return;
        nextButton.style.opacity = "0";
    });
</script>
