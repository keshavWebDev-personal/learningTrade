---
    import SrchInput from './srchInput_comp.svelte'

    let colleges = Astro.props.colleges
    type College = {
        name: string;
        address: {
            local: string;
            city: string;
            district: string;
            state: string;
            country: string;
        };
    }
    function cptlFstL(string:string) {
        return string.charAt(0).toUpperCase() + string.slice(1);
    }
---

<div
    class="  min-h-screen max-h-max w-full flex justify-center p-0 m-0 box-border"
>
    <div class=" flex flex-col w-11/12 2xl:w-4/6  max-h-full">
        <div class=" w-full flex items-center mt-12 gap-4">
            <img
                src="svg/back_button.svg"
                width="1.25rem"
                height="1.25rem"
                alt=""
                srcset=""
                class=" w-5"
            />
            <!-- progrress-bar -->
            <div class=" bg-gray-200 w-full h-1 flex rounded-lg">
                <!-- progrress-bar-completed -->
                <span class=" w-1/6 bg-green-600"></span>
            </div>
        </div>
        <label for="" class="font-[HelveticaWorld] text-3xl lg:text-5xl md:text-4xl sm:text-3xl mt-10 "
            >Tell us about your College</label
        >
        <div class=" w-full h-full flex flex-col items-center mt-10">
            <!-- search-container -->
            <div
                class="lg:w-96 lg:h-14 lg:p-3 md:text-lg text-sm sm:w-80 sm:h-12 sm:p-2 w-2/3 h-10 p-1 rounded-full b bg-gradient-to-r from-[#FFF7AD] to-[#FFA9F9] flex items-center justify-between "
            >
                <div
                    class=" rounded-full bg-[#004AAD] lg:w-10 lg:p-2 sm:w-8 sm:p-2 w-6 p-1 text-white fill-white"
                >
                    <img src="svg/search-icon.svg" alt="" srcset="" />
                </div>
                <SrchInput />
                <button id="cleanBtn">
                    <img
                        src="svg/cross.svg"
                        alt=""
                        srcset=""
                        class=" sm:w-5 w-3  mr-2"
                    />
                </button>
            </div>
            <div
                class=" pb-5 w-full h-full max-h-fit bg-gradient-to-r from-[#FFF7AD] to-[#FFA9F9] flex flex-col items-center mt-4 rounded-t-3xl font-[poppins]"
            >
            {
                colleges.map((item: College)=>{
                    return
                    <button class=" active:scale-[0.99] active:bg-gray-200 focus:bg-green-200 focus:shadow-lg focus:scale-[1.02] border-2 border-white bg-gray-100 sm:min-h-20 min-h-16 md:w-1/2 sm:w-3/4 w-11/12  xl:text-2xl lg:text-xl md:text-base sm:text-sm text-xs text-left sm:px-6 sm:py-3 px-3 py-1 rounded-3xl mt-6 hover:scale-[1.02] transform-gpu shadow hover:shadow-lg hover:bg-gray-50 transition duration-200">
                        {item.name}
                        <br />
                        <p class=" xl:text-base lg:text-sm md:text-xs sm:text-[0.7rem] text-[0.5rem] ">
                            {cptlFstL(item.address.local)},
                            {cptlFstL(item.address.city)},
                            {cptlFstL(item.address.district)},
                            {cptlFstL(item.address.state)},
                            {cptlFstL(item.address.country)}
                        </p>
                    </button>
                })
            }
<!--             
                {#each filteredColleges as item}
                    <button
                        class=" active:scale-[0.99] active:bg-gray-200 focus:bg-green-200 focus:shadow-lg focus:scale-[1.02] border-2 border-white bg-gray-100 sm:min-h-20 min-h-16 md:w-1/2 sm:w-3/4 w-11/12  xl:text-2xl lg:text-xl md:text-base sm:text-sm text-xs text-left sm:px-6 sm:py-3 px-3 py-1 rounded-3xl mt-6 hover:scale-[1.02] transform-gpu shadow hover:shadow-lg hover:bg-gray-50 transition duration-200"
                    >
                        {item.name}
                        <br />
                        <p class=" xl:text-base lg:text-sm md:text-xs sm:text-[0.7rem] text-[0.5rem] ">
                            {cptlFstL(item.address.local)},
                            {cptlFstL(item.address.city)},
                            {cptlFstL(item.address.district)},
                            {cptlFstL(item.address.state)},
                            {cptlFstL(item.address.country)}
                        </p>
                    </button>
                {/each} -->
            </div>
        </div>
    </div>
</div>

<script>
    let clearBtn: HTMLButtonElement | null = document.querySelector("#cleanBtn")
    clearBtn?.addEventListener("click",()=>clear())

    export let colleges: College[] = [];

    type College = {
        name: string;
        address: {
            local: string;
            city: string;
            district: string;
            state: string;
            country: string;
        };
    }

    let filteredColleges: College[] = [];
    let srch_value = "";
    function srchInputHandeler() {
        if (srch_value == "") {
            filteredColleges = colleges;
            return;
        }
        filteredColleges = colleges.filter((clg) => {
            const search = srch_value.toLowerCase();
            return (
                clg.name.toLowerCase().includes(search) ||
                Object.values(clg.address).some((value) =>
                    value.toLowerCase().includes(search)
                )
            );
        });
    }
    function clear() {
        srch_value = "";
        srchInputHandeler();
    }
    srchInputHandeler();
    
</script>